FlowNote {
  Expression
    = NodeTypes
    | FlowTypes
    | Import 
    | PathTypes
    | comment
    | EmptyListOf<Nodes, Channel>

  FlowTypes
    = FlowDefinition
  NodeTypes
    = NodeDefinition
  PathTypes
    = Path

  FlowDefinition = "flow" Axiom "(" HttpMethods "/" ListOf<Axiom, "/"> ")" Properties? "=" NonemptyListOf<Nodes, Channel>

  NodeDefinition = "node" Axiom Properties? "=" Actions

  Actions = ListOf<Axiom, ",">

  Path = StandardNode Channel NonemptyListOf<Nodes, Channel>

  Import = "import" string

  Nodes
    = WaitFor
    | Node

  WaitFor = Node "..." Axiom

  Node
    = IdentityNode
    | NodeBase

  IdentityNode = NodeBase "#" Axiom

  NodeBase
    = Milestone
    | SilentNode
    | StandardNode

  Milestone 
    = StandardNode "*"
    | SilentNode "*"

  SilentNode = StandardNode "$"

  StandardNode = Axiom
  
  Channel
    = ErrorChannel
    | NamedChannel
    | PlainChannel

  ErrorChannel = "-" Axiom Properties? "!"
  NamedChannel = "-" Axiom Properties? ">"
  PlainChannel = "-" Properties? ">"

  Properties = "{" ListOf<Property, ","> "}"
  Property = label ":" Axiom

  HttpMethods
    = "GET"
    | "POST"
    | "PUT"
    | "DELETE"
    | "OPTIONS"
    | "HEAD"

  Axiom = NonemptyListOf<label, ".">
  label = alnum+
  string  (a string literal) = "\"" (~"\"" ~"\n" any)* "\""
  number  (a number literal)
    = fraction
    | whole
  fraction = digit* "." digit+
  whole = digit+
  space += comment
  comment
    = multiLineComment
    | singleLineComment
  multiLineComment = "/*" (~"*/" any)* "*/"
  singleLineComment = "//" (~"\n" any)*
}
